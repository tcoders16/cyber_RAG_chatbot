# Cybersecurity Compliance Chatbot (RAG-based)

Welcome to the official repository of the **Cybersecurity Compliance Chatbot**. This is a powerful and visually elegant chatbot that answers questions related to the **NIST Cybersecurity Framework (CSF) Version 2.0** using **RAG (Retrieval-Augmented Generation)** powered by **OpenAI** and **Pinecone**.

![Chatbot UI Screenshot](./screenshots/chat-ui.png)

## 🔧 Tech Stack

* **Frontend**: React + Vite + Tailwind CSS
* **Backend**: Node.js + Express.js
* **Embedding & Generation**: OpenAI (GPT-3.5 Turbo + `text-embedding-3-small`)
* **Vector Search**: Pinecone Vector DB
* **UI Styling**: Orbitron & Poppins fonts, dark theme, neon accents

---

## 💬 What the Chatbot Can Do

* Answer questions about:

  * Access control
  * Security procedures
  * Risk management
  * Logging, recovery, and compliance concepts
* Provide architecture answers:

  * Who built the chatbot
  * What technologies were used
  * How it's different from standard ChatGPT

---

## ⚙️ How It Works (RAG Architecture)

This chatbot is built on **Retrieval-Augmented Generation**:

1. **Chunking**: The NIST CSF PDF is split into small paragraphs.
2. **Embedding**: Each chunk is converted to a 1536-dimension vector using OpenAI.
3. **Storage**: Chunks + metadata are stored in Pinecone.
4. **Querying**: User question is embedded and queried against Pinecone.
5. **Retrieval**: Top 5 similar chunks are sent as context to ChatGPT.
6. **Response**: GPT-3.5 responds based ONLY on that context.

---

## 📁 Folder Structure

```
├── backend/
│   └── server.js                # Express backend
├── frontend/
│   ├── src/
│   │   ├── App.tsx             # Routes and layout
│   │   ├── components/
│   │   │   └── ChatBox.tsx     # Main chatbot UI
│   │   └── pages/
│   │       ├── Home.tsx        # Chat page with intro
│   │       └── AboutChatbot.tsx# RAG explanation + PDF
│   └── public/data.pdf         # NIST CSF v2.0 file
├── screenshots/
│   └── chat-ui.png             # UI preview
└── README.md
```

---

## 💻 Sample Code (RAG Flow)

```ts
// Step 1: Embed user question
const embedding = await openai.embeddings.create({
  model: "text-embedding-3-small",
  input: userQuestion,
});

// Step 2: Query Pinecone
const results = await pinecone.index("cybersecvectordb")
  .namespace("ns1")
  .query({
    vector: embedding.data[0].embedding,
    topK: 5,
    includeMetadata: true,
  });

// Step 3: Build context
const context = results.matches.map(m => m.metadata.text).join("\n");

// Step 4: GPT uses only that context
const completion = await openai.chat.completions.create({
  model: "gpt-3.5-turbo",
  messages: [
    {
      role: "system",
      content: "You are a compliance assistant. Use ONLY the context."
    },
    {
      role: "user",
      content: `Context:\n${context}\n\nQuestion: ${userQuestion}`
    }
  ]
});
```

---

## 🌐 Live Preview

Coming soon to Vercel.

---

## 📷 Screenshots

### Home Page

![Home](./frontend/my-react-app/public/home.png)


### Chat UI Example

![Chat](./frontend/my-react-app/public/chat-ui.png)


### About Page with Vector Details

![About](./frontend/my-react-app/public/about-rag1.png)
![About](./frontend/my-react-app/public/about-rag2.png)
![About](./frontend/my-react-app/public/about-rag3.png)



---

## 📚 Resources

* [NIST Cybersecurity Framework](https://www.nist.gov/cyberframework)
* [OpenAI Documentation](https://platform.openai.com/docs)
* [Pinecone Vector DB](https://www.pinecone.io/)

---

## 👨‍💻 Developer Info

**Omkumar Vijaysinh Solanki**

* 🔗 [LinkedIn Profile](https://www.linkedin.com/in/omkumar-solanki-atluxuarywxtchbusinessmandeveloper2/)
* 💻 [GitHub](https://github.com/tcoders16)
* 💡 Full Stack Dev | iOS | Web3 | AI/ML | GPT Integrator

---

## 📥 How to Run It Locally

### Backend

```bash
cd backend
npm install
node server.js
```

### Frontend

```bash
cd frontend
npm install
npm run dev
```

---

## 📜 License

MIT License
