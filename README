Here’s your fully updated README.md with clean formatting, correct screenshot paths, and updated descriptions for your RAG-based cybersecurity chatbot project.

✅ Make sure your screenshots/ folder is in the root of the project and contains:
home.png, chat-ui.png, about-rag1.png, about-rag2.png, about-rag3.png.

⸻


# 🛡️ Cybersecurity Compliance Chatbot (RAG-based)

Welcome to the official repository of the **Cybersecurity Compliance Chatbot**. This chatbot helps users query and understand the **NIST Cybersecurity Framework (CSF) Version 2.0**, using a **RAG (Retrieval-Augmented Generation)** architecture powered by **OpenAI** and **Pinecone**.

Built with modern web technologies and designed for security engineers, auditors, and compliance professionals.

---

## 🔧 Tech Stack

- **Frontend**: React + Vite + Tailwind CSS
- **Backend**: Node.js + Express.js
- **Embedding**: OpenAI (`text-embedding-3-small`)
- **Generation**: OpenAI GPT-3.5 Turbo
- **Vector DB**: Pinecone (for semantic chunk retrieval)
- **Styling**: Orbitron & Poppins fonts, dark UI with neon accents

---

## 💬 What This Chatbot Can Do

- Answer questions from the NIST CSF v2.0 like:
  - Access control
  - Security procedures
  - Audit logging
  - Risk management
  - Recovery and response planning

- Answer technical chatbot queries:
  - Who created this chatbot?
  - What stack is used?
  - How is it different from ChatGPT?
  - Does it use vector search?
  - What is Pinecone and how does it retrieve?

---

## ⚙️ How It Works (RAG Architecture)

This project uses **Retrieval-Augmented Generation (RAG)**:

1. The NIST CSF PDF is split into chunks (paragraphs).
2. Each chunk is embedded into a 1536-dimension vector using OpenAI.
3. Vectors are stored in Pinecone with text metadata.
4. When a question is asked:
   - The question is also embedded into a vector.
   - Pinecone returns the top 5 most relevant chunks.
   - These are used as context to GPT-3.5.
5. GPT-3.5 generates a final answer based ONLY on this context.

---

## 📁 Folder Structure

cyber_RAG_chatbot/
│
├── backend/
│   └── server.js                # Express backend with OpenAI + Pinecone integration
│
├── frontend/
│   └── my-react-app/
│       ├── src/
│       │   ├── components/
│       │   │   └── ChatBox.tsx  # Chat UI logic
│       │   └── pages/
│       │       ├── Home.tsx     # Main UI
│       │       └── AboutChatbot.tsx # Explains RAG + PDF view
│       └── public/data.pdf      # NIST CSF document
│
├── screenshots/
│   ├── home.png
│   ├── chat-ui.png
│   ├── about-rag1.png
│   ├── about-rag2.png
│   └── about-rag3.png
│
└── README.md

---

## 🧠 Sample Code (RAG Flow)

```ts
// Step 1: Embed user query
const embedding = await openai.embeddings.create({
  model: "text-embedding-3-small",
  input: userQuestion,
});

// Step 2: Search Pinecone for top 5 related chunks
const results = await pinecone.index("cybersecvectordb")
  .namespace("nist-v2")
  .query({
    vector: embedding.data[0].embedding,
    topK: 5,
    includeMetadata: true,
  });

// Step 3: Construct context
const context = results.matches.map(m => m.metadata.text).join("\n");

// Step 4: Ask GPT using retrieved context
const response = await openai.chat.completions.create({
  model: "gpt-3.5-turbo",
  messages: [
    {
      role: "system",
      content: "You are a cybersecurity assistant. Use ONLY the context provided to answer.",
    },
    {
      role: "user",
      content: `Context:\n${context}\n\nQuestion: ${userQuestion}`,
    },
  ],
  temperature: 0.3,
});


⸻

📸 Screenshots

🏠 Home Page

💬 Chat UI

📄 About Page with Vector Details


⸻

📥 How to Run Locally

1. Backend Setup

cd backend
npm install
node server.js

Make sure to include a .env file with:

OPENAI_API_KEY=your_openai_key
PINECONE_API_KEY=your_pinecone_key
PINECONE_ENV=your_pinecone_env
PINECONE_INDEX=your_index_name

2. Frontend Setup

cd frontend/my-react-app
npm install
npm run dev


⸻

🌐 Live Preview

Coming soon to Vercel

⸻

📚 Resources
	•	NIST Cybersecurity Framework
	•	OpenAI Platform
	•	Pinecone Vector DB

⸻

👨‍💻 Developer Info

Omkumar Vijaysinh Solanki
	•	🔗 LinkedIn
	•	💻 GitHub
	•	⚡ iOS | Web3 | Full Stack | AI/ML | GPT Integrator

⸻

📜 License

MIT License

---

Let me know if you'd like me to generate a custom `README.md` badge header or GitHub stats footer as well.